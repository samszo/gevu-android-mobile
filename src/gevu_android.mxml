<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:tr="com.sparkTree.*"
			   xmlns:mx="library://ns.adobe.com/flex/halo"
			   xmlns:sqlite="com.peterelst.air.sqlite.*" 
			   xmlns:gevu="gevu.*"
			   xmlns:view="views.*"
			   xmlns:f4cb="com.oreilly.f4cb.*"
			   xmlns:gallery="gallery.*"
			   backgroundColor="black"
			   creationComplete="application_creationCompleteHandler(event)"
			   >
	
	<fx:Style>
		@namespace s  "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		s|Button#add_button {
			skinClass: ClassReference("views.ImageButtonSkinAdd");
		}	
		s|Button#delete_button{
			skinClass: ClassReference("views.ImageButtonSkinDelete");
		}
		s|Button#edit_button {
			skinClass: ClassReference("views.ImageButtonSkinEdit");
		}
	</fx:Style>
	
	
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			import flash.utils.getDefinitionByName;
			import flash.utils.getQualifiedClassName;
			
			import gevu.arbre;
			import gevu.delPopup;
			import gevu.login;
			import gevu.popup;
			
			import mx.core.FlexGlobals;
			import mx.core.ScrollPolicy;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.TitleWindow;
			
			import views.Images;
			
			[Bindable] public var lat:Number;
			[Bindable] public var lng:Number;
			
			private var popmsg:popup = new popup();
			private var	delpopup:delPopup = new delPopup();
			private var closeTimer:Timer;
			/*
			  The exit algo:
			  1- Fire off an event when a user leaves the application
			  2- Set a timer to shut down the app
			  3- If the user returns, kill that timer
			*/
			// Start of the exit code
			protected function init(event:FlexEvent):void
			{
				NativeApplication.nativeApplication.addEventListener(Event.DEACTIVATE, onDeactivate);
				NativeApplication.nativeApplication.addEventListener(Event.ACTIVATE, onActivate);
			}
			protected function onDeactivate(event:Event):void
			{
				closeTimer = new Timer(30000,1);
				closeTimer.addEventListener(TimerEvent.TIMER_COMPLETE,closeApp);
				closeTimer.start();
			}
			protected function closeApp(event:Event):void{
				NativeApplication.nativeApplication.exit();
			}
			protected function onActivate(event:Event):void
			{
				closeTimer = null;
			}
			// End of the exit code
			
			protected function galary_clickHandler(event:MouseEvent):void
			{
				this.Preview.source="";
				if(this.photoPanel.myVid!=null)
					this.photoPanel.initCamera();
				this.view2.selectedIndex=1;
				this.previewPanel.visible=true;
				this.leftSide.visible=false;
				if(this.myGalary!=null)
					this.myGalary.initGalary();
				
			}
			private function PrepareAdd():void
				
			{
				this.add.visible=true;
				this.edit.visible=false;
				this.back.visible=true;
				this.nom_lieu.text="";
				viewstack.selectedIndex = 1
			}
			
			protected function updateGeo_clickHandler(event:MouseEvent):void
		
			{	
				this.mytree.updateGeo.execute();
			}
			
			private function show_tree_clickHandler(event:MouseEvent):void
			{
				this.back.visible=false;
				viewstack.selectedIndex = 0;
			}
			
			public function getID():int{
				return this.mytree.getID();
			}
			private function PrepareEdit():void
				
			{
				this.nom_lieu.text=this.mytree.get_lib();
				this.add.visible=false;
				this.edit.visible=true;
				this.back.visible=true;
				viewstack.selectedIndex = 1
			}
			
			protected function delete_clickHandler(event:MouseEvent):void
			{
				if(mytree.treeItem == null) {
					PopUpManager.addPopUp(popmsg,this,true);
					PopUpManager.centerPopUp(popmsg);
					popmsg.setMsg("Veuillez séléctioner un lieu");
					popmsg.open(this,false);
					
					
				}
				else {
					PopUpManager.addPopUp(delpopup,this,true);
					PopUpManager.centerPopUp(delpopup);
					delpopup.fnct=mytree.delete_lieu;
					delpopup.open(this,false);
				}
			}
			
			protected function add_clickHandler(event:MouseEvent):void
			{
				if(mytree.treeItem == null) {
					PopUpManager.addPopUp(popmsg,this,true);
					PopUpManager.centerPopUp(popmsg);
					popmsg.setMsg("Veuillez séléctioner un lieu");
					popmsg.open(this,false);
				}
				else
				{	
					if(this.nom_lieu.text == "" ) 
					{
						
						PopUpManager.addPopUp(popmsg,this,true);
						PopUpManager.centerPopUp(popmsg);
						popmsg.setMsg("Veuillez insérer le nom");
						popmsg.open(this,false);	
					}
					else {		 
						this.mytree.new_nom_lieu=this.nom_lieu.text;
						this.mytree.get_lieu_info_add.execute();
						
					}
				}
			}
			
			
			
			private function get_lib():String{
				var lib:String= this.mytree.get_lib();
				return lib;
			}
			
			protected function edit_clickHandler(event:MouseEvent):void
			{
				if(mytree.treeItem == null) {
					popmsg.setMsg("Veuillez séléctioner un lieu");
					popmsg.open(this,false);
				}
				else {
					if(this.nom_lieu.text == "" ) 
					{
						popmsg.setMsg("Veuillez insérer le nom");
						popmsg.open(this,false);	
					}
					else {
						this.mytree.set_lib(this.nom_lieu.text);
						this.mytree.edit();
					}
				}
			}
			
			public  function init_tree():void{
				this.mytree.scroller.setVisible(true);
				this.mytree.setStyle("horizontalScrollPolicy",ScrollPolicy.ON)	
			}
			
			protected function deleteImage_clickHandler(event:MouseEvent):void
			{
				PopUpManager.addPopUp(delpopup,this,true);
				PopUpManager.centerPopUp(delpopup);
				delpopup.fnct=this.myGalary.deleteImage;
				delpopup.open(this,false);
			}
			
			protected function gps_clickHandler(event:MouseEvent):void
			{
				if(this.mytree.treeItem==null)
					this.updateGeo.enabled=false;
				else 
					this.updateGeo.enabled=true;
				this.viewstack.selectedIndex=2;
				this.back.visible=true;
				this.lat=this.mytree.getLat();
				this.lng=this.mytree.getLng();	
			}
			
			
			protected function exit_clickHandler(event:MouseEvent):void
			{
			  NativeApplication.nativeApplication.exit();	
			}
			
			
			protected function application_creationCompleteHandler(event:FlexEvent):void
			{
				
				var helpWindow:TitleWindow = new TitleWindow();
				PopUpManager.centerPopUp(helpWindow);
				helpWindow= PopUpManager.createPopUp(this, login, false) as TitleWindow;
				
				
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout/>
	</s:layout>
	<s:VGroup id="left_interface" paddingLeft="13" paddingTop="13" visible="false">
		
	  <s:HGroup gap="20">   
		
		<s:Image source="@Embed('assets/exit.jpg')" click="exit_clickHandler(event)"/>
		<s:Image id="gps" source="@Embed('assets/gps.gif')" click="gps_clickHandler(event)"
					width="25" height="25" /> 
		<s:Button id="add_button" click="PrepareAdd()" />
		<s:Button id="edit_button" click="PrepareEdit()"/>
		
	  </s:HGroup>	   
		
	  <s:HGroup gap="20">
			<s:Image id="back" visible="false" source="@Embed('assets/back.png')" click="show_tree_clickHandler(event)"
					 width="25" height="25"/>
			<s:Image id="galary" source="@Embed('assets/galary.gif')" click="galary_clickHandler(event)"
					 width="25" height="25" />
		    <s:Button id="delete_button" label="Suprimmer ce lieu"
					 click="delete_clickHandler(event)"/>
			
				
			
	  </s:HGroup>
		
		<f4cb:CustomViewStack id="viewstack" width="300" height="300"
							  skinClass="com.oreilly.f4cb.CustomBorderSkin" >
			
			<gevu:arbre  id="mytree" width="300" height="300"/>
			<s:VGroup paddingLeft="13" paddingTop="13">
				
				<s:Label id="lab" text="Veuillez-écriver le nom: " fontSize="15"/>
				
				<s:TextInput id="nom_lieu" width="150"  height="30"/>
				<s:HGroup>
					<s:Button id="add"  label="Enregistrer" click="add_clickHandler(event)" 
							  fontSize="10" width="75" height="25"
							  />
					<s:Button id="edit"  label="Modifier" click="edit_clickHandler(event)" 
							  fontSize="10" width="75" height="25"
							  />
				</s:HGroup>
			</s:VGroup>
			
			<s:VGroup paddingLeft="13" paddingTop="13">
				<s:HGroup width="100%">
					<s:Label text="lat." width="55"/>
					<s:TextInput id="latField"   width="175" text="{this.lat}"/>	
				</s:HGroup>	
				<s:HGroup>
					<s:Label text="lng."  width="55" />
					<s:TextInput id="lngField" width="175" text="{this.lng}"/>
				</s:HGroup>
				<s:Button id="updateGeo" label="Mettre à jour les données" click="updateGeo_clickHandler(event)"/>
			</s:VGroup>
			
		</f4cb:CustomViewStack>
		
		<s:VGroup id="arbre">
		</s:VGroup>
	</s:VGroup>
	
	
	<f4cb:CustomViewStack id="view2" width="1023" height="730" visible="false">
		
		<s:Scroller width="100%" height="100%">
			<s:VGroup id="main_interface" paddingLeft="13" paddingTop="13">
			</s:VGroup>
		</s:Scroller>
		
		
			
		<s:VGroup>	
			<s:HGroup id="previewPanel" paddingTop="15" paddingLeft="13">
			 <view:Images id="photoPanel"/>
			  <s:HGroup id="leftSide" visible="false">	
				<s:Image id="Preview"  left="40" top="15" width="400"/>
				<s:Image id="deleteImage" source="@Embed('assets/delete.png')" click="deleteImage_clickHandler(event)"
						 width="25"/>
			  </s:HGroup>	  
			</s:HGroup>
	
			<gallery:gallery id="myGalary" />
		</s:VGroup>
	
		
		<s:VGroup>	
			<s:HGroup id="previewPanel2" paddingLeft="110" paddingTop="15">
				<s:Image id="deleteImage2" source="@Embed('assets/delete.png')" 
						 click="deleteImage_clickHandler(event)"
						 width="25" height="25"/>  
				<s:VideoPlayer id="Preview2"
					source="assets/A.flv"
					width="350" height="250"
					loop="true"/> 
			</s:HGroup>	 
			<gallery:gallery id="myGalary2" /> 
		</s:VGroup>
		
	</f4cb:CustomViewStack>	
</s:Application>