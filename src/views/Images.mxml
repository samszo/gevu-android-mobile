<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:sqlite="com.peterelst.air.sqlite.*"
		title="Photo Upload" xmlns:f4cb="com.oreilly.f4cb.*">
	
	
	<fx:Declarations>
		<sqlite:SQLite id="db" file="gevu_mobile.db"/>
		<sqlite:Query id="addImage" connection="{db.connection}"
			sql="insert into gevu_docs(id_instant,url,titre,branche,tronc,
			content_type,path_source,maj)
			values(0,'{this.url}','{this.FileName}',0,'nan','media','{this.url}',
			'{this.toSqlDate(myDate)}')"
			result="addImage_resultHandler(event)"
			error="addImage_errorHandler(event)"/>	  
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.media.Camera;
			
			import mx.core.FlexGlobals;
			import mx.graphics.codec.JPEGEncoder;
			import mx.utils.object_proxy;
			[Bindable] private var tofH:int = 360;
			[Bindable] private var tofW:int = 300;
			[Bindable] private var path:String;
			[Bindable] private var DateNow:Date;
			[Bindable] private var FileName:String;
			[Bindable] private var url:String;
			[Bindable] private var myDate:Date = new Date();
			private var trim:RegExp = /[~+%&\\;:"',<>?#\s]/g
				
			private function takePicture(event:MouseEvent):void {	
				var bmd:BitmapData = new BitmapData(tofH,tofW);
				bmd.draw(myVid);				
				//create a new instance of the encoder, and set the jpeg compression level from 0 to 100
				var jpgenc:JPEGEncoder = new JPEGEncoder(80);
				//encode the bitmapdata object and keep the encoded ByteArray
				var imgByteArray:ByteArray = jpgenc.encode(bmd);
				imagen.source = new Bitmap(bmd);
				DateNow=new Date();
				FileName=DateNow.toString();
				FileName=FileName.replace(trim,"");
				var dir:File=File.applicationStorageDirectory.resolvePath("galary");
				if(dir.exists==false) dir.createDirectory();
				var fl:File= File.applicationStorageDirectory.resolvePath("galary/"+FlexGlobals.topLevelApplication.getID()+"/"+FileName+ ".jpg");
				url= fl.url;
				//Use a FileStream to save the bytearray as bytes to the new file
				var fs:FileStream = new FileStream();
				try{
					//open file in write mode
					fs.open(fl,FileMode.WRITE);
					//write bytes from the byte array
					fs.writeBytes(imgByteArray);
					//close the file
					fs.close();
				}catch(e:Error){
					trace(e.message);
				}
	            this.addImage.execute();
				FlexGlobals.topLevelApplication.myGalary.initGalary();
				//imageView.selectedIndex=1;
			}
			
			public  function initCamera():void {			
				var cam:Camera = Camera.getCamera();
				var myCam:Video = new Video(tofH,tofW);
				cam.setMode(tofH,tofW, 15);
				cam.setQuality(0, 0);
				myCam.attachCamera(cam);
				myVid.addChild(myCam);
				imageView.selectedIndex=0;
			}
			
			
			//take a new picture with the camera
			protected function uploadCamera_clickHandler(event:MouseEvent):void
			{
				if (CameraUI.isSupported)
				{
					trace("camera is supported");
					var myCam:CameraUI = new CameraUI();
					myCam.launch(MediaType.IMAGE);
				}
				else
				{
					this.myVid.visible=true;
					initCamera();
				}
			}
			
			/*
			//select a picture from the camera roll (gallery)
			protected function uploadGallery_clickHandler(event:MouseEvent):void
			{
			if (CameraRoll.supportsBrowseForImage)
			{
			trace("camera roll is supported");
			var roll:CameraRoll = new CameraRoll();
			roll.browseForImage();
			roll.addEventListener(MediaEvent.SELECT,selectCompleteHandler);
			}
			else
			{
			trace("camera roll not supported");
			
			}
			}
			
			//when the selection is complete upload it
			protected function selectCompleteHandler(event:MediaEvent):void
			{
			trace("event.data.file.url; = "+event.data.file.url);
			file = event.data.file;
			file.addEventListener(Event.COMPLETE,uploadCompleteHandler);
			file.addEventListener(Event.OPEN,openUploadHandler);
			file.upload(urlRequest);
			
			}
			
			protected function uploadCompleteHandler(event:Event):void
			{
			
			}
			
			protected function openUploadHandler(event:Event):void
			{
			
			}*/
			
			protected function prends_photo_clickHandler(event:MouseEvent):void
			{
			 initCamera();	
			}
			
			protected function addImage_resultHandler(event:SQLEvent):void
			{
			 var o:Object=event;	
			}
			
			protected function addImage_errorHandler(event:SQLErrorEvent):void
			{
				var o:Object=event;	
			}
			
			public function lpad(original:Object, length:int, pad:String):String
			{
				var padded:String = original == null ? "" : original.toString();
				while (padded.length < length) padded = pad + padded;
				return padded;
			}
			
			public function toSqlDate(dateVal:Date):String
			{
				return dateVal == null ? null : dateVal.fullYear
					+ "-" + lpad(dateVal.month + 1,2,'0')  // month is zero-based
					+ "-" + lpad(dateVal.date,2,'0')
					+ " " + lpad(dateVal.hours,2,'0')
					+ ":" + lpad(dateVal.minutes,2,'0')
					+ ":" + lpad(dateVal.seconds,2,'0')
					;
			}
			
			
		]]>
	</fx:Script>
	
			<f4cb:CustomViewStack id="imageView" width="361" height="424">
				
				<s:VGroup>
					<s:VideoDisplay id="myVid"  width="{tofW}" height="{tofH}" creationComplete="initCamera()"/>
					<s:VGroup paddingLeft="13">
						<s:Button label="Enregistrer" click="takePicture(event)"/>	
					</s:VGroup>
						
				</s:VGroup>
				<s:VGroup>
					<s:Image id="imagen" />
     				<s:Button id="prends" label="Prends une photo"  click="prends_photo_clickHandler(event)"/>
				</s:VGroup>
				
			</f4cb:CustomViewStack>	
		
</s:View>