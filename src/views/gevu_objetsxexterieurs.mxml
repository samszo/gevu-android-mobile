<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:view="views.*"
		xmlns:sqlite="com.peterelst.air.sqlite.*"
		>
	
	
	
	<fx:Declarations>
		<sqlite:SQLite id="db" file="gevu_mobile.db"/>
		
		<sqlite:Query id="obj_ext_que" connection="{db.connection}"
		sql="SELECT ref, fonctions, id_type_objet,id_instant
		     FROM gevu_objetsxexterieurs
    		 WHERE id_lieu={this.selected_id}"
		result="obj_ext_que_resultHandler(event)"
		error="obj_ext_que_errorHandler(event)"/>
			
		<sqlite:Query id="update" connection="{db.connection}"
					  sql="update gevu_objetsxexterieurs set ref='{this.ref}',fonctions='{this.fonc}',
					  id_type_objet='{this.combo}' WHERE id_lieu={this.selected_id}"
					  result="update_obj_resultHandler(event)"
					  error="obj_ext_que_errorHandler(event)"/>
	</fx:Declarations>	
	<fx:Script>
		<![CDATA[
			import mx.charts.CategoryAxis;
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.collections.IList;
			import mx.core.FlexGlobals;
			
			import spark.events.GridItemEditorEvent;
			
			import views.gevu_diagnostics;
			
			
			           private var dbFile:File;
			           private var sqlConn:SQLConnection;
			           private var sqlState:SQLStatement;
			[Bindable] private var arrCtrl:Array=new Array();
			[Bindable] private var dp:ArrayCollection = new ArrayCollection();
			[Bindable] private var cont:Array;
			[Bindable] private var type:String;
			[Bindable] private var reponse:String;
			[Bindable] private var selected_id:int;
			[Bindable] private var ref:String=" ";
			[Bindable] private var fonc:String=" ";
			[Bindable] private var combo:String=" ";
			[Bindable] private var id_instant:int;
			
			
	  protected function update_obj_resultHandler(event:SQLEvent):void
		{
    		var o:Object=event;	
		}	
			
	   public function set_selected_id(x:int):void{
				dbFile =File.applicationDirectory.resolvePath("gevu_mobile.db");
				sqlConn= new SQLConnection();
				sqlState = new SQLStatement();
				sqlConn.open(dbFile);
				sqlState.sqlConnection=sqlConn;
				
				
				var temp:Array = new Array();
				var type:String;
				var y:int;
				
				this.selected_id=x;
				
				cont= FlexGlobals.topLevelApplication.mytree.getLieuCtl(x,10,"/node",true);
			 
				for (var i:int=0;i<cont.length;i++)
				 {
				  y=cont[i];
				  sqlState.text="SELECT lib FROM gevu_typesxcontroles WHERE id_type_controle="+y;
				  sqlState.execute();
				  temp=sqlState.getResult().data;
				  type=temp[0].lib;
				  this.dp.addItem({typeCtrl:type});
				  arrCtrl[i]=type;
				 }
				this.obj_ext_que.execute();
			}
			
			protected function obj_ext_que_resultHandler(event:SQLEvent):void
			{
			  var temp:Array = this.obj_ext_que.data;
			  this.F2.text= temp[0].ref
			  this.F3.text=	temp[0].fonctions;
			  this.id_instant=temp[0].id_instant;
			  this.combo=temp[0].id_type_objet;
			  
			  switch(this.combo)
			  {
				  case "Lieu de Travail":
				  {
					  this.reponse_1.selected=true;
					  break;
				  }
					 
				  case "Public":
				  {
					  this.reponse_2.selected=true;
					  break;
				  }
					  
				  case "Mixte":
				  {
					  this.reponse_3.selected=true;
					  break;
				  }	  
				  default:
				  {
					  break;
				  }
			  }
			}
			
			protected function obj_ext_que_errorHandler(event:SQLErrorEvent):void
			{
			  var o:Object=event;	
			}
			
			private function editmodif(rep:String):void{
				switch(rep)
				{
					case "reponse_1":
					{
						this.combo="Lieu de Travail";
						break;
					}
						
					case "reponse_2":
					{
						this.combo="Public";
						break;
					}
						
					case "reponse_3":
					{
						this.combo="Mixte";
						break;
					}	  
					default:
					{
						break;
					}
				}
				
			}
			
			protected function saveModif_clickHandler(event:MouseEvent):void
			{
			 if(this.F2.text !="") this.ref=this.F2.text; 
			 
			 if(this.F3.text !="") this.fonc=this.F3.text;
			 
			 this.update.execute();
			}
			
			
			protected function ajoutDiag_clickHandler(event:MouseEvent):void
			{
			  var diag:gevu_diagnostics = new gevu_diagnostics();
			  diag.id_instant=this.id_instant;
			  if (FlexGlobals.topLevelApplication.main_interface.numChildren>0)
				  FlexGlobals.topLevelApplication.main_interface.removeAllElements();
			  FlexGlobals.topLevelApplication.main_interface.addElement(diag);
			}
			
			
			public function editModif(val:MouseEvent) : void {
				this.reponse =val.currentTarget.label;
				
			}
			
		]]>
	</fx:Script>

<s:Panel x="0" y="0" width="926" height="686"  backgroundColor="black" title="Objet extÃ©rieur">
	<s:HGroup>

	<s:VGroup width="557" height="285" paddingBottom="13" paddingLeft="13" paddingTop="13" gap="20">
		<s:HGroup>
			<s:Label text="ref:" color="white" width="70" height="100%" verticalAlign="middle"/>
			<s:TextInput id="F2" width="200"  />
		</s:HGroup>
		
		<s:HGroup>
			<s:Label text="fonctions:" color="white" height="100%" verticalAlign="middle"/>
			<s:TextInput id="F3" width="200"  />
		</s:HGroup>

		<s:HGroup>
			<s:Label  text="Type social d'objet : " color="white" height="100%" verticalAlign="middle"/>
			<s:RadioButton groupName="type" id="reponse_1" label="Lieu de Travail" color="white"  change="editmodif('reponse_1')"/> 
			<s:RadioButton groupName="type" id="reponse_2" label="Public" color="white" change="editmodif('reponse_2')" />
			<s:RadioButton groupName="type" id="reponse_3" label="Mixte" color="white" change="editmodif('reponse_3')" />
		</s:HGroup>
        <s:Button id="saveModif" label="Enregistrer" click="saveModif_clickHandler(event)" />
	</s:VGroup>
	<s:VGroup paddingBottom="13" paddingLeft="13" paddingTop="13" gap="15">
		<view:repTypeDyna height="369" arrCtrl="{this.arrCtrl}" fnct="{this.editModif}"
						  type="Type d'objet"/>
	</s:VGroup>	
</s:HGroup>	
</s:Panel>
	<s:Button id="ajoutDiag" x="583" y="555" label="Ajouter des diagnostics"
			  click="ajoutDiag_clickHandler(event)"/>
	</s:View>
