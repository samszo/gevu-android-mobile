<?xml version="1.0" encoding="utf-8"?>
<tr:Tree xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:tr="com.sparkTree.*"
		 xmlns:mx="library://ns.adobe.com/flex/halo"
		 xmlns:sqlite="com.peterelst.air.sqlite.*"
		 dataProvider="{testData}"
		 width="100%" height="100%" itemIdentifyField="treeid" allowItemDisSelection="false"
		 useVirtualLayout="false" dragEnabled="false" dropEnabled="false" labelField="label"
		 click="tree_clickHandler(event)"
		 >		
	<fx:Declarations>
		<sqlite:SQLite id="db" file="gevu_mobile.sqlite" open="tree_query.execute()" />
		<sqlite:Query id="tree_query" connection="{db.connection}" 
					  sql="SELECT node.lib, node.id_lieu, node.lieu_parent,node.lft,node.rgt
					  FROM gevu_lieux AS node,
					  gevu_lieux AS parent
					  WHERE node.lft BETWEEN parent.lft AND parent.rgt
					  GROUP BY node.id_lieu
					  ORDER BY node.lft"
					  result="onSelectResult()" />
		
		<sqlite:Query id="form_query" connection="{db.connection}"
					  sql="SELECT l.lib, l.id_lieu, a.id_antenne, b.id_batiment,c.id_geo,d.id_diag,e.id_doc,
					  f.id_espace,g.id_espace_ext,h.id_espace_int,i.id_etablissement,j.id_niveau,
					  k.id_objet_ext,m.id_objet_int,n.id_objet_voirie,o.id_observations,
					  p.id_parcelle,q.id_probleme,s.id_groupe,t.id_logement,u.id_local,v.id_part_commu
					  FROM gevu_lieux AS l
					  LEFT JOIN gevu_antennes AS a ON a.id_lieu = l.id_lieu
					  LEFT JOIN gevu_batiments AS b ON b.id_lieu = l.id_lieu
					  LEFT JOIN gevu_geos AS c ON c.id_lieu = l.id_lieu
					  LEFT JOIN gevu_diagnostics AS d ON d.id_lieu = l.id_lieu
					  LEFT JOIN gevu_docsxlieux AS e ON e.id_lieu = l.id_lieu
					  LEFT JOIN gevu_espaces AS f ON f.id_lieu = l.id_lieu
					  LEFT JOIN gevu_espacesxexterieurs AS g ON g.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_espacesxinterieurs AS h ON h.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_etablissements AS i ON i.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_niveaux AS j ON j.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_objetsxexterieurs AS k ON k.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_objetsxinterieurs AS m ON m.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_objetsxvoiries AS n ON n.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_observations AS o ON o.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_parcelles AS p ON p.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_problemes AS q ON q.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_groupes AS s ON s.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_logements AS t ON t.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_locaux AS u ON u.id_lieu = l.id_lieu
					  LEFT JOIN Gevu_partiescommunes AS v ON v.id_lieu = l.id_lieu
					  where l.id_lieu ={this.selected_id} 
					  GROUP BY l.id_lieu
					  ORDER BY l.id_lieu ;" 
					  result="form_query_resultHandler(event)"/>
		
		<s:ArrayCollection id="testData" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.sparkTree.TreeEvent;
			
			import flash.display.DisplayObject;
			import flash.net.dns.SRVRecord;
			import flash.sampler.NewObjectSample;
			import flash.utils.getDefinitionByName;
			
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			
			import spark.components.Application;
			import spark.components.Button;
			import spark.events.IndexChangeEvent;
			import spark.events.ListEvent;
			
			import views.Gevu_espacesxinterieurs;
			import views.Gevu_groupes;
			import views.Gevu_locaux;
			import views.Gevu_logements;
			import views.Gevu_niveaux;
			import views.Gevu_objetsxexterieurs;
			import views.Gevu_objetsxinterieurs;
			import views.Gevu_parcelles;
			import views.Gevu_partiescommunes;
			import views.gevu_antennes;
			import views.gevu_batiments;
			import views.gevu_espacesxexterieurs;
			import views.gevu_geos;
			

			
			
		   [Bindable]
			private var selected_id:int;
			
			private var tabels:Array= new Array;
	
						
			/* 
			 * This function is responsible for
             * Building the tree			
             */	
			private function onSelectResult():void {
				var res:ArrayCollection=new ArrayCollection(tree_query.data);
				var parents:Array = new Array;
				testData.disableAutoUpdate();
				testData.removeAll();
				
				for(var i:int=0;i<res.length;i++)
				{
					if (res.getItemAt(i).rgt != res.getItemAt(i).lft +1) //==>this is a parent node
					{	 
						parents[i] = new DiskGroup(res.getItemAt(i).lib,res.getItemAt(i).id_lieu);
						if( ! parents[i].children ) parents[i].children = new ArrayCollection();
						var parent_id:int=res.getItemAt(i).lieu_parent;
						if(parent_id>0)
						{
						for (var j:int=0;j<parents.length;j++)
							if(parents[j]!=null)
							if(parent_id==parents[j].getID)
							parents[j].children.addItem(parents[i]);	
						}
						
					}//it is a parent node
					else{
						var leaf:Disk= new Disk(res.getItemAt(i).lib,res.getItemAt(i).id_lieu)
						var leaf_parent_id:int=res.getItemAt(i).lieu_parent;
						for (var k:int=0;k<parents.length;k++) 
						  if(parents[k]!=null)
							if(leaf_parent_id==parents[k].getID)
								parents[k].children.addItem(leaf);	
					  }	// it is a leaf
					}//for loop
				
				   testData.addItem(parents[0]);	 	
                   testData.enableAutoUpdate();              		
			}
	
			//Retrive the id of the clicked tree item
		    //and executes the form query to know whcih
			// info is associated to this "lieu" in order
			//to build the appropriate form
			protected function tree_clickHandler(event:MouseEvent):void
			{
			 selected_id=event.currentTarget.selectedItem.source.getID;
			 form_query.execute();
			 }
			
			
		    
			protected function form_query_resultHandler(event:SQLEvent):void
			{
			 var form_res:ArrayCollection= new ArrayCollection(form_query.data);
			 var ids:Array = getForms(form_res);
			 var forms:Array=initTables();
			 var className:String;
			 var ClassReference:Class;
			 var instance:Object;
			 //these references are added for the compiler to 
			 // have a refernce and execute the getDefinitionByName()
			 //methode and if not, an : variable not found error will happen
			 gevu_antennes;
			 gevu_batiments;
			 gevu_espacesxexterieurs;
			 Gevu_espacesxinterieurs;
			 Gevu_groupes;
			 Gevu_locaux;
			 Gevu_logements;
			 Gevu_niveaux;
			 Gevu_objetsxexterieurs;
			 Gevu_objetsxinterieurs;
			 Gevu_parcelles;
			 Gevu_partiescommunes;
			 gevu_geos;//just for test
			 
			 //removing all interfaces
			  if (FlexGlobals.topLevelApplication.main_interface.numChildren>0)
				  for (var j:int=0;j<FlexGlobals.topLevelApplication.main_interface.numChildren;j++)
					  FlexGlobals.topLevelApplication.main_interface.removeElementAt(j);
			  
			  for (var k:int=0;k<ids.length;k++)
			  {
				 className= "views."+tabels[ids[k]] ;
				 ClassReference = getDefinitionByName(className) as Class;
				 instance = new ClassReference();
				 FlexGlobals.topLevelApplication.main_interface.addElement(instance);
				 
			  }
			}//function
			
			
			
			public function initTables():Array {
				
				tabels['id_antenne']='gevu_antennes';
				tabels['id_batiment']='gevu_batiments';
				tabels['id_geo']='gevu_geos';
				tabels['id_diag']='gevu_diagnostics';
				tabels['id_doc']='gevu_docsxlieux';
				tabels['id_espace']='gevu_espaces';
				tabels['id_espace_ext']='gevu_espacesxexterieurs';
				tabels['id_espace_int']='Gevu_espacesxinterieurs';
				tabels['id_etablissement']='Gevu_etablissements';
				tabels['id_niveau']='Gevu_niveaux';
				tabels['id_objet_ext']='Gevu_objetsxexterieurs';
				tabels['id_espace_int']='Gevu_objetsxinterieurs';
				tabels['id_objet_voirie']='Gevu_objetsxvoiries';
				tabels['id_observations']='Gevu_observations';
				tabels['id_parcelle']='Gevu_parcelles';
				tabels['id_probleme']='Gevu_problemes';
				tabels['id_groupe']='Gevu_groupes';
				tabels['id_logement']='Gevu_logements';
				tabels['id_local']='Gevu_locaux';
				tabels['id_part_commu']='Gevu_partiescommunes';
				
				return tabels;
			}
			
			public function getForms(info:ArrayCollection):Array{
				var compo:Array = new Array;
				var i:int=0 ;
				
				//there is a way to change this.
				if (info.getItemAt(0).id_antenne !=null) {
					compo[i] = "id_antenne";
					i++;
				}
				
				if (info.getItemAt(0).id_batiment !=null) {
					compo[i] = "id_batiment";
					i++;
				}
				
				if (info.getItemAt(0).id_geo !=null) {
					compo[i] = "id_geo";
					i++;
				}
				
				if (info.getItemAt(0).id_diag !=null) {
					compo[i] = "id_diag";
					i++;
				}
				
				if (info.getItemAt(0).id_doc !=null) {
					compo[i] = "id_doc";
					i++;
				}
				
				if (info.getItemAt(0).id_espace !=null) {
					compo[i] = "id_espace";
					i++;
				}
				
				if (info.getItemAt(0).id_espace_ext !=null) {
					compo[i] = "id_espace_ext";
					i++;
				}
				
				if (info.getItemAt(0).id_espace_int !=null) {
					compo[i] = "id_espace_int";
					i++;
				}
				
				if (info.getItemAt(0).id_etablissement !=null) {
					compo[i] = "id_etablissement";
					i++;
				}
				
				
				if (info.getItemAt(0).id_niveau !=null) {
					compo[i] = "id_niveau";
					i++;
				}
				
				if (info.getItemAt(0).id_objet_ext !=null) {
					compo[i] = "id_objet_ext";
					i++;
				}
				
				if (info.getItemAt(0).id_objet_int !=null) {
					compo[i] = "id_objet_int";
					i++;
				}
				
				if (info.getItemAt(0).id_objet_voirie !=null) {
					compo[i] = "id_objet_voirie";
					i++;
				}
				
				if (info.getItemAt(0).id_observations !=null) {
					compo[i] = "id_observations";
					i++;
				}
				
				if (info.getItemAt(0).id_parcelle !=null) {
					compo[i] = "id_parcelle";
					i++;
				}
				
				if (info.getItemAt(0).id_probleme !=null) {
					compo[i] = "id_probleme";
					i++;
				}
				
				if (info.getItemAt(0).id_groupe !=null) {
					compo[i] = "id_groupe";
					i++;
				}
				
				if (info.getItemAt(0).id_logement !=null) {
					compo[i] = "id_logement";
					i++;
				}
				
				if (info.getItemAt(0).id_local !=null) {
					compo[i] = "id_local";
					i++;
				}
				
				if (info.getItemAt(0).id_part_commu !=null) {
					compo[i] = "id_part_commu";
					i++;
				}
				return compo;
			}
			
		]]>	
	</fx:Script>
</tr:Tree>
